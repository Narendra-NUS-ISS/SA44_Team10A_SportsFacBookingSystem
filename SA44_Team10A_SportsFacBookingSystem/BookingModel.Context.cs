//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SA44_Team10A_SportsFacBookingSystem
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BookingSystemEntities : DbContext
    {
        public BookingSystemEntities()
            : base("name=BookingSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BookingTransaction> BookingTransactions { get; set; }
        public virtual DbSet<Facility> Facilities { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<SlotAvailability_Procedure_Result> SlotAvailability_Procedure(Nullable<System.DateTime> slotDate, string location)
        {
            var slotDateParameter = slotDate.HasValue ?
                new ObjectParameter("slotDate", slotDate) :
                new ObjectParameter("slotDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SlotAvailability_Procedure_Result>("SlotAvailability_Procedure", slotDateParameter, locationParameter);
        }
    
        public virtual ObjectResult<UnAvailabileSlot_Procedure_Result> UnAvailabileSlot_Procedure(string facilityName, string location)
        {
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnAvailabileSlot_Procedure_Result>("UnAvailabileSlot_Procedure", facilityNameParameter, locationParameter);
        }
    
        public virtual ObjectResult<UnAvailabileSlot_Procedure1_Result> UnAvailabileSlot_Procedure1(string facilityName, string location)
        {
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnAvailabileSlot_Procedure1_Result>("UnAvailabileSlot_Procedure1", facilityNameParameter, locationParameter);
        }
    
        public virtual ObjectResult<BlankSlot_Procedure_Result> BlankSlot_Procedure(string facilityName, string location)
        {
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlankSlot_Procedure_Result>("BlankSlot_Procedure", facilityNameParameter, locationParameter);
        }
    
        public virtual ObjectResult<BlankSlotStructure_Procedure_Result> BlankSlotStructure_Procedure(string facilityName, string location)
        {
            var facilityNameParameter = facilityName != null ?
                new ObjectParameter("facilityName", facilityName) :
                new ObjectParameter("facilityName", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlankSlotStructure_Procedure_Result>("BlankSlotStructure_Procedure", facilityNameParameter, locationParameter);
        }
    
        public virtual ObjectResult<SlotAvailabilityStructure_Procedure_Result> SlotAvailabilityStructure_Procedure(Nullable<System.DateTime> slotDate, string location)
        {
            var slotDateParameter = slotDate.HasValue ?
                new ObjectParameter("slotDate", slotDate) :
                new ObjectParameter("slotDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SlotAvailabilityStructure_Procedure_Result>("SlotAvailabilityStructure_Procedure", slotDateParameter, locationParameter);
        }
    
        public virtual ObjectResult<SlotAvailabilityStructureTemplate_Procedure_Result> SlotAvailabilityStructureTemplate_Procedure(Nullable<System.DateTime> slotDate, string location)
        {
            var slotDateParameter = slotDate.HasValue ?
                new ObjectParameter("slotDate", slotDate) :
                new ObjectParameter("slotDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SlotAvailabilityStructureTemplate_Procedure_Result>("SlotAvailabilityStructureTemplate_Procedure", slotDateParameter, locationParameter);
        }
    
        public virtual ObjectResult<SlotAvailStructureTemplate_Procedure_Result> SlotAvailStructureTemplate_Procedure(Nullable<System.DateTime> slotDate, string location)
        {
            var slotDateParameter = slotDate.HasValue ?
                new ObjectParameter("slotDate", slotDate) :
                new ObjectParameter("slotDate", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SlotAvailStructureTemplate_Procedure_Result>("SlotAvailStructureTemplate_Procedure", slotDateParameter, locationParameter);
        }
    }
}
